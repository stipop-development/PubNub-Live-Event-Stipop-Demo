{"ast":null,"code":"import _slicedToArray from \"/Users/stipop/Desktop/StipopRepos/pubnub_stream/chat-component-app-live-event/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/stipop/Desktop/StipopRepos/pubnub_stream/chat-component-app-live-event/src/components/MessageListPanel/MessageListPanel.tsx\";\n\nimport React, { useReducer, useRef, useState } from 'react';\nimport { MessageListPanelWrapper } from './MessageListPanel.styles';\nimport { MessageInputWrapper, ComposeMessageBoxWrapper, UserImgWrapper } from '../ComposeMessageBox/ComposeMessageBox.styles';\nimport { MessageList } from '../MessageList/MessageList';\nimport { appData, appStateReducer } from \"../../AppStateContext\";\nexport var MessageListPanel = function MessageListPanel(props) {\n  var textAreaEl = useRef(null);\n\n  var _useReducer = useReducer(appStateReducer, appData),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sticker = _useState4[0],\n      setSticker = _useState4[1];\n\n  React.useEffect(function () {\n    fetch('/v1/package?userId=123&pageNumber=1&country=us', {\n      // const response = fetch('/v1/package?userId=123&pageNumber=1&country=us', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'apiKey': 'c61fc5d0a6b7600ccb94edbca4e86a8a'\n      },\n      method: \"get\"\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      setSticker(json.body.packageList);\n    }); // .then((json) => setStickers(json.body.packageList))\n    // .then(json => console.log(json))\n    // .then((responseJson) => {console.log(responseJson)});\n    // console.log(response);\n  }, []);\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === 'Enter') {\n      if ((textAreaEl === null || textAreaEl === void 0 ? void 0 : textAreaEl.current) !== null) {\n        dispatch({\n          type: \"SEND_MESSAGE\",\n          payload: {\n            messageContent: textAreaEl.current.value\n          }\n        });\n        textAreaEl.current.value = \"\";\n        textAreaEl.current.blur();\n        console.log('do validate');\n      }\n    }\n  };\n\n  var handleClick = function handleClick(image) {\n    if (image) {\n      dispatch({\n        type: \"SEND_MESSAGE\",\n        payload: {\n          messageContent: image\n        }\n      });\n      console.log('do validate');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MessageListPanelWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MessageList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ComposeMessageBoxWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UserImgWrapper, {\n    src: state.eventHostAvatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MessageInputWrapper, {\n    autoComplete: \"off\",\n    onKeyPress: handleKeyDown,\n    ref: textAreaEl,\n    id: \"messageContent\" // onSubmitEditing={Keyboard.dismiss}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: '../../../../src/img/sticker.svg',\n    onClick: function onClick() {\n      return setIsOpen(!isOpen);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), isOpen === true ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '380px',\n      minWidth: '380px',\n      height: '420px',\n      backgroundColor: '#ffffff',\n      border: 'solid 1px #d9d9d9',\n      borderRadius: '6px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, sticker && sticker.map(function (stickers, index) {\n    console.log(stickers);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: stickers.packageId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: '72px',\n        height: '70px',\n        marginLeft: '20px',\n        marginTop: '10px'\n      },\n      src: stickers.packageImg,\n      onClick: function onClick() {\n        return handleClick(stickers.packageImg);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }));\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }))));\n};\nMessageListPanel.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"MessageListPanel\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/MessageListPanel/MessageListPanel.tsx\"] = {\n    name: \"MessageListPanel\",\n    docgenInfo: MessageListPanel.__docgenInfo,\n    path: \"src/components/MessageListPanel/MessageListPanel.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/stipop/Desktop/StipopRepos/pubnub_stream/chat-component-app-live-event/src/components/MessageListPanel/MessageListPanel.tsx"],"names":["MessageListPanel","textAreaEl","useRef","state","dispatch","useReducer","isOpen","setIsOpen","useState","sticker","setSticker","React","fetch","headers","method","response","json","handleKeyDown","event","type","payload","messageContent","value","console","handleClick","image","width","minWidth","height","backgroundColor","border","borderRadius","display","flexWrap","stickers","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useRef, useState }  from 'react';\nimport { MessageListPanelWrapper } from './MessageListPanel.styles';\nimport {  MessageInputWrapper, ComposeMessageBoxWrapper, UserImgWrapper, EmojiInputWrapper, StickerButton } from '../ComposeMessageBox/ComposeMessageBox.styles';\nimport { MessageList } from '../MessageList/MessageList';\nimport { AppStateProvider, appData, useAppState, Message, appStateReducer } from \"../../AppStateContext\"\n\n\ninterface MessageListPanelProps {\n\n\n}\n\nexport const MessageListPanel: React.SFC<MessageListPanelProps> = (props: MessageListPanelProps) => {\n\n  const textAreaEl = useRef<HTMLInputElement>(null);\n  const [state, dispatch] = useReducer(appStateReducer, appData);\n  const [isOpen, setIsOpen] = useState(false);\n  const [sticker, setSticker] = useState<any>([]);\n\n\n  React.useEffect(() => {\n    fetch('/v1/package?userId=123&pageNumber=1&country=us', {\n      // const response = fetch('/v1/package?userId=123&pageNumber=1&country=us', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'apiKey': 'c61fc5d0a6b7600ccb94edbca4e86a8a'\n        },\n        method:\"get\"\n      })\n      .then((response) => response.json())\n      .then((json) => {setSticker(json.body.packageList)})      // .then((json) => setStickers(json.body.packageList))\n      // .then(json => console.log(json))\n        // .then((responseJson) => {console.log(responseJson)});\n      // console.log(response);\n  }, [])\n\n  const handleKeyDown: React.KeyboardEventHandler = event => {\n    if (event.key === 'Enter') {\n\n      if (textAreaEl?.current !== null) {\n\n        dispatch({\n          type: \"SEND_MESSAGE\",\n          payload: { messageContent: textAreaEl.current!.value! }\n        } as {\n          type: \"SEND_MESSAGE\",\n          payload: {\n            messageContent: string\n          }\n        }\n        );\n        textAreaEl.current!.value = \"\";\n        textAreaEl.current.blur();\n        console.log('do validate');\n      }\n\n    }\n  };\n\n  const handleClick = (image) => {\n      if (image) {\n          dispatch({\n            type: \"SEND_MESSAGE\",\n            payload: { messageContent: image }\n          } as {\n            type: \"SEND_MESSAGE\",\n            payload: {\n              messageContent: string\n            }\n          }\n          );\n          console.log('do validate');\n        }\n  }\n\n  return (\n    <>\n      {/* <AppStateProvider> */}\n        <MessageListPanelWrapper>\n          <MessageList />\n          <ComposeMessageBoxWrapper>\n            <UserImgWrapper src={state.eventHostAvatar} />\n            <MessageInputWrapper\n              autoComplete=\"off\"\n              onKeyPress={handleKeyDown}\n              ref={textAreaEl}\n              id=\"messageContent\"\n              // onSubmitEditing={Keyboard.dismiss}\n            />\n            {/* <StickerButton onClick={() => setIsOpen(!isOpen)} /> */}\n            <img src={'../../../../src/img/sticker.svg'} onClick={() => setIsOpen(!isOpen)} />\n            {isOpen === true ?  \n              <div \n                style={{ \n                  width: '380px', \n                  minWidth: '380px', \n                  height: '420px', \n                  backgroundColor: '#ffffff',\n                  border: 'solid 1px #d9d9d9',\n                  borderRadius: '6px'\n                }}\n              >\n                <div style={{ display: 'flex', flexWrap: 'wrap'}}>\n\n                {\n                  sticker && sticker.map((stickers, index) => {\n                    console.log(stickers);\n                    return (\n                      <div\n                        key={stickers.packageId}\n                      >\n                        <img\n                          style={{\n                            width: '72px',\n                            height: '70px',\n                            marginLeft: '20px',\n                            marginTop: '10px'\n                          }}  \n                          src={stickers.packageImg} \n                          onClick={() => handleClick(stickers.packageImg)} \n                        />\n                      </div>\n                    );\n                  })\n                }\n                </div>\n                {/* <div style={{ display: 'flex', flexWrap: 'wrap'}}>\n                  <img style={{width: '80px', height: '80px' }} src={sticker.length > 0 && sticker[0].packageImg} onClick={() => handleClick(sticker[0].packageImg)} />\n                  <img style={{width: '80px', height: '80px' }} src={sticker.length > 0 && sticker[1].packageImg} onClick={() => handleClick(sticker[1].packageImg)} />\n                  <img style={{width: '80px', height: '80px' }} src={sticker.length > 0 && sticker[2].packageImg} onClick={() => handleClick(sticker[2].packageImg)} />\n                  <img style={{width: '80px', height: '80px' }} src={sticker.length > 0 && sticker[3].packageImg} onClick={() => handleClick(sticker[3].packageImg)} />\n                  <img style={{width: '80px', height: '80px' }} src={sticker.length > 0 && sticker[4].packageImg} onClick={() => handleClick(sticker[4].packageImg)} />\n                  <img style={{width: '80px', height: '80px' }} src={sticker.length > 0 && sticker[5].packageImg} onClick={() => handleClick(sticker[5].packageImg)} />\n                </div> */}\n              </div>\n              : \n              <div></div>\n            }\n            {/* <EmojiInputWrapper src=\"/images/emojiInput@3x.png\" /> */}\n          </ComposeMessageBoxWrapper>\n        </MessageListPanelWrapper>\n      {/* </AppStateProvider> */}\n </>\n  );\n}"]},"metadata":{},"sourceType":"module"}