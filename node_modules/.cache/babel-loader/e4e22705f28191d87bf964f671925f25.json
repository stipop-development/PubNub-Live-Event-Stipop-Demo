{"ast":null,"code":"import _slicedToArray from \"/Users/stipop/Desktop/StipopRepos/pubnub_stream/chat-component-app-live-event/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/stipop/Desktop/StipopRepos/pubnub_stream/chat-component-app-live-event/src/components/LiveFeedPanelReactPlayer/LiveFeedPanelReactPlayer.tsx\";\n\nimport React, { useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { LiveFeedPanelReactPlayerWrapper } from './LiveFeedPanelReactPlayer.styles';\nvar theme = {\n  main: \"mediumseagreen\"\n};\nexport var LiveFeedPanelReactPlayer = function LiveFeedPanelReactPlayer(props) {\n  var _useState = useState('Event-00000-00000'),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayName = _useState2[0],\n      setDisplayName = _useState2[1];\n\n  var _useState3 = useState('Event-Location-00000-00001'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      roomName = _useState4[0],\n      setRoomName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loader = _useState8[0],\n      setLoader = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      onCall = _useState10[0],\n      setOnCall = _useState10[1];\n\n  return /*#__PURE__*/React.createElement(LiveFeedPanelReactPlayerWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: props.url,\n    width: \"100%\",\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"center\",\n    \"flex-direction\": \"row\" //height=\"0px\"\n    // height={props.height}\n    ,\n    controls: true,\n    config: {\n      youtube: {\n        playerVars: {\n          showinfo: 1\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar EventNameInput = function EventNameInput() {\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      inputValue = _useState12[0],\n      setInputValue = _useState12[1];\n\n  return /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputValue,\n    placeholder: \"Event name\",\n    onChange: function onChange(ev) {\n      return setInputValue(ev.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  });\n};\n\nvar HostNameInput = function HostNameInput() {\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      inputValue = _useState14[0],\n      setInputValue = _useState14[1];\n\n  return /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputValue,\n    placeholder: \"Your host name\",\n    onChange: function onChange(ev) {\n      return setInputValue(ev.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  });\n};\n\nfunction CreateEventButton() {\n  // initialise with null, but tell TypeScript we are looking for an HTMLInputElement\n  var inputEl = React.useRef(null);\n\n  var onButtonClick = function onButtonClick() {\n    if (inputEl && inputEl.current) {\n      inputEl.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"Focus the input\"));\n}\n\nLiveFeedPanelReactPlayer.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"LiveFeedPanelReactPlayer\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/LiveFeedPanelReactPlayer/LiveFeedPanelReactPlayer.tsx\"] = {\n    name: \"LiveFeedPanelReactPlayer\",\n    docgenInfo: LiveFeedPanelReactPlayer.__docgenInfo,\n    path: \"src/components/LiveFeedPanelReactPlayer/LiveFeedPanelReactPlayer.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/stipop/Desktop/StipopRepos/pubnub_stream/chat-component-app-live-event/src/components/LiveFeedPanelReactPlayer/LiveFeedPanelReactPlayer.tsx"],"names":["theme","main","LiveFeedPanelReactPlayer","displayName","setDisplayName","useState","roomName","setRoomName","password","setPassword","loader","setLoader","onCall","setOnCall","props","youtube","playerVars","showinfo","EventNameInput","inputValue","setInputValue","ev","HostNameInput","inputEl","React","onButtonClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from \"react-dom\";\nimport ReactPlayer from 'react-player';\nimport { \n  LiveFeedPanelReactPlayerWrapper, \n  FormGroup, \n  Label, \n  Input, \n  Message, \n  Button,\n  ButtonCreateEvent,\n  EventNameWrapper,\n  CreateEventWrapper,\n  HostNameWrapper,\n  CreateEventButtonWrapper\n} from './LiveFeedPanelReactPlayer.styles';\n\n\nconst theme = {\n  main: \"mediumseagreen\"\n};\n\n\ninterface LiveFeedPanelReactPlayerProps {\n  // opts:any ,\n  // onReady: any\n  url: string,\n}\n\nexport const LiveFeedPanelReactPlayer: React.SFC<LiveFeedPanelReactPlayerProps> = (props: LiveFeedPanelReactPlayerProps) => {\n  const [displayName, setDisplayName] = useState('Event-00000-00000')\n  const [roomName, setRoomName] = useState('Event-Location-00000-00001')\n  const [password, setPassword] = useState('')\n  const [loader, setLoader] = useState({})\n  const [onCall, setOnCall] = useState(false)\n  return(\n    <LiveFeedPanelReactPlayerWrapper>\n      <ReactPlayer\n        url={props.url}\n        width=\"100%\"\n        display=\"flex\"\n        align-items= \"center\"\n        justify-content= \"center\"\n        flex-direction=\"row\"\n        //height=\"0px\"\n        // height={props.height}\n        controls\n        config={{\n          youtube: {\n            playerVars: { showinfo: 1 }\n          },\n\n        }}\n      />\n    </LiveFeedPanelReactPlayerWrapper>\n\n)}\n\nconst EventNameInput = (): JSX.Element => {\n  const [inputValue, setInputValue] = useState<string>(\"\");\n  return (\n      <input\n          type=\"text\"\n          value={inputValue}\n          placeholder=\"Event name\"\n          onChange={(\n              ev: React.ChangeEvent<HTMLInputElement>,\n          ): void => setInputValue(ev.target.value)}\n      />\n  );\n};\n\nconst HostNameInput = (): JSX.Element => {\n  const [inputValue, setInputValue] = useState<string>(\"\");\n  return (\n      <input\n          type=\"text\"\n          value={inputValue}\n          placeholder=\"Your host name\"\n          onChange={(\n              ev: React.ChangeEvent<HTMLInputElement>,\n          ): void => setInputValue(ev.target.value)}\n      />\n  );\n};\nfunction CreateEventButton() {\n  // initialise with null, but tell TypeScript we are looking for an HTMLInputElement\n  const inputEl = React.useRef<HTMLInputElement>(null);\n  const onButtonClick = () => {\n\n    if (inputEl && inputEl.current) {\n      inputEl.current.focus();\n    }\n  };\n  return (\n    <>\n\n      <button onClick={onButtonClick}>Focus the input</button>\n    </>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}