{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/stipop/Desktop/StipopRepos/pubnub_stream/chat-component-app-live-event/src/components/Message/Message.tsx\";\n\nimport React from 'react';\nimport { MessageMessageWrapper, MessageWrapper, AvatarWrapper, SenderNameWrapper } from './Message.styles';\nexport var Message = function Message(props) {\n  var checkImage = function checkImage(message) {\n    console.log('message: ', message);\n\n    if (/\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i.test(message)) {\n      return /*#__PURE__*/React.createElement(MessageMessageWrapper, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          height: '30%',\n          width: '30%'\n        },\n        src: message,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(MessageMessageWrapper, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(MessageWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(AvatarWrapper, {\n    src: props.message.UserAvatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(SenderNameWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, props.message.senderName), checkImage(props.message.message));\n};\nMessage.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Message\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Message/Message.tsx\"] = {\n    name: \"Message\",\n    docgenInfo: Message.__docgenInfo,\n    path: \"src/components/Message/Message.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/stipop/Desktop/StipopRepos/pubnub_stream/chat-component-app-live-event/src/components/Message/Message.tsx"],"names":["Message","checkImage","console","height","width","props"],"mappings":";;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,qBAAA,EAAA,cAAA,EAAA,aAAA,EAAA,iBAAA,QAAA,kBAAA;AAQA,OAAO,IAAMA,OAAgC,GAAG,SAAnCA,OAAmC,CAAA,KAAA,EAAyB;AAEzE,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAA,OAAA,EAAa;AAC9BC,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,WAAAA,EAAAA,OAAAA;;AACA,QAAI,qCAAA,IAAA,CAAJ,OAAI,CAAJ,EAA0D;AACxD,aAAA,aACE,KAAA,CAAA,aAAA,CAAA,qBAAA,EAAA;AAAA,QAAA,MAAA,EAAA,KAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAR,KAAA;AAAiBC,UAAAA,KAAK,EAAE;AAAxB,SAAZ;AAA4C,QAAA,GAAG,EAA/C,OAAA;AAAA,QAAA,MAAA,EAAA,KAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,CADF,CADF;AADF,KAAA,MAOK;AACH,aAAA,aACE,KAAA,CAAA,aAAA,CAAA,qBAAA,EAAA;AAAA,QAAA,MAAA,EAAA,KAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,EADF,OACE,CADF;AAKD;AAfH,GAAA;;AAkBA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AAAe,IAAA,GAAG,EAAEC,KAAK,CAALA,OAAAA,CAApB,UAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CADF,EAAA,aAEE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAoBA,KAAK,CAALA,OAAAA,CAFtB,UAEE,CAFF,EAIKJ,UAAU,CAACI,KAAK,CAALA,OAAAA,CALlB,OAKiB,CAJf,CADF;AApBO,CAAA","sourcesContent":["import React from 'react';\nimport { MessageMessageWrapper, MessageWrapper, AvatarWrapper,SenderNameWrapper } from './Message.styles';\nimport {UserMessage} from '../../AppStateContext'\n\n\ninterface MessageProps {\n  message: UserMessage;\n}\n\nexport const Message: React.SFC<MessageProps> = (props: MessageProps) => {\n\nconst checkImage = (message) => {\n  console.log('message: ', message);\n  if ((/\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i).test(message)) {\n    return (\n      <MessageMessageWrapper>\n        <img style={{ height: '30%', width: '30%'}} src={message} />\n      </MessageMessageWrapper>\n    )\n  }\n  else {\n    return (\n      <MessageMessageWrapper>\n        {message}\n      </MessageMessageWrapper>\n    )\n  }\n}\n\nreturn (\n  <MessageWrapper>\n    <AvatarWrapper src={props.message.UserAvatar}/>\n    <SenderNameWrapper>{props.message.senderName}</SenderNameWrapper>\n    {/* <MessageMessageWrapper> */}\n      {checkImage(props.message.message)}\n    {/* </MessageMessageWrapper> */}\n  </MessageWrapper>\n);\n\n}\n\n"]},"metadata":{},"sourceType":"module"}